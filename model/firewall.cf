import ip
import vyos

entity NetworkGroup extends vyos::ConfigNode:
    string name
    ip::cidr[] networks
end

index NetworkGroup(host)

implementation networkGroup for NetworkGroup:
    self.node_name = "firewall group network-group"
    self.config = vyos::Config(
        device=self.host.name, 
        node=self.node_name, 
        credential=self.host.credential,
        config=std::template("vyos/firewall_network_group.j2"), 
        requires=[self.host.requires, self.requires],
        provides=self.provides
    )
end

implement NetworkGroup using networkGroup

entity NetworkGroupV6 extends vyos::ConfigNode:
    string name
    ip::cidr_v6[] networks
end

index NetworkGroupV6(host)

implementation networkGroupV6 for networkGroupV6:
    self.node_name = "firewall group ipv6-network-group"
    self.config = vyos::Config(
        device=self.host.name, 
        node=self.node_name, 
        credential=self.host.credential,
        config=std::template("vyos/firewall_network_v6_group.j2"), 
        requires=[self.host.requires, self.requires],
        provides=self.provides
    )
end

implement NetworkGroupV6 using networkGroupV6

entity PortGroup extends vyos::ConfigNode:
    string name
    string[] ports
end

index PortGroup(host)

implementation portGroup for PortGroup:
    self.node_name = "firewall group port-group"
    self.config = vyos::Config(
        device=self.host.name, 
        node=self.node_name, 
        credential=self.host.credential,
        config=std::template("vyos/firewall_port_group.j2"), 
        requires=[self.host.requires, self.requires],
        provides=self.provides
    )
end

implement PortGroup using portGroup
